// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_math = require("bs-platform/lib/js/js_math.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function init(limit) {
  return Belt_Array.concat([2], Belt_Array.rangeBy(3, limit, 2));
}

function is_prime(n) {
  return !Belt_Array.some(init(Js_math.floor_int(Math.sqrt(n))), (function (x) {
                return Caml_int32.mod_(n, x) === 0;
              }));
}

function nearest(_n) {
  while(true) {
    var n = _n;
    if (is_prime(n)) {
      return n;
    }
    _n = n - 1 | 0;
    continue ;
  };
}

function $$process(_num, _count, lim) {
  while(true) {
    var count = _count;
    var num = _num;
    if (num >= lim) {
      return count;
    }
    if (String(num).indexOf("7") >= 0) {
      _num = (num + nearest(num) | 0) + 1 | 0;
      continue ;
    }
    _count = count + 1 | 0;
    _num = num + 1 | 0;
    continue ;
  };
}

console.log($$process(0, 0, 5433000));

exports.init = init;
exports.is_prime = is_prime;
exports.nearest = nearest;
exports.$$process = $$process;
/*  Not a pure module */
