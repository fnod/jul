// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var Belt_SetString = require("bs-platform/lib/js/belt_SetString.js");

var answers = Fs.readFileSync("in/6.txt", "utf8").split("\n\n");

var partial_arg = /\n/g;

console.log(Belt_Array.reduce(Belt_Array.map(Belt_Array.map(Belt_Array.map(Belt_Array.map(answers, (function (param) {
                            return param.replace(partial_arg, "");
                          })), (function (param) {
                        return param.split("");
                      })), Belt_SetString.fromArray), Belt_SetString.size), 0, (function (a, b) {
            return a + b | 0;
          })));

function incrementKey(m, k) {
  return Belt_MapString.set(m, k, Belt_MapString.getWithDefault(m, k, 0) + 1 | 0);
}

function _countLetters(_s, _m) {
  while(true) {
    var m = _m;
    var s = _s;
    var match = s[0];
    var match$1 = s.slice(1);
    if (match$1 === "") {
      return incrementKey(m, match);
    }
    _m = incrementKey(m, match);
    _s = match$1;
    continue ;
  };
}

function countLetters(str) {
  return _countLetters(str.replace(/[^a-z]/g, ""), Belt_MapString.fromArray([]));
}

function answeredByAll(str) {
  return Belt_Array.keep(Belt_MapString.valuesToArray(countLetters(str.replace(/\n/g, ""))), (function (n) {
                return n === str.split(/\n/g).length;
              })).length;
}

console.log(Belt_Array.reduce(Belt_Array.map(answers, answeredByAll), 0, (function (a, b) {
            return a + b | 0;
          })));

exports.answers = answers;
exports.incrementKey = incrementKey;
exports._countLetters = _countLetters;
exports.countLetters = countLetters;
exports.answeredByAll = answeredByAll;
/* answers Not a pure module */
